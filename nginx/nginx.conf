# /etc/nginx/nginx.conf
# 역할: Spring Boot 앱(8080) 앞단에서 리버스 프록시 + 로드밸런서
# - 기본은 HTTP(80). HTTPS는 맨 아래 주석 블록 참고.
# - /ws/** 경로는 WebSocket 업그레이드 헤더를 그대로 전달
# - /api/sse 경로는 SSE 스트리밍이 끊기지 않도록 버퍼링 비활성화
# - 파일 업로드는 50MB까지 허용 (Spring 설정과 맞춤)
# - HTTPS 종단점 설정_LetsEncrypt; HTTP에서 ACME challenge + 리다이렉트.

env LETSENCRYPT_DOMAIN;
user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  sendfile      on;
  server_tokens off;

  # DNS 리졸버 추가 (VPC DNS 서버)
  resolver 169.254.169.253 valid=10s;
  resolver_timeout 5s;

  # 로그 포맷 개선 (디버깅용)
  log_format detailed '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     'upstream: $upstream_addr '
                     'upstream_status: $upstream_status '
                     'response_time: $upstream_response_time';

  access_log /var/log/nginx/access.log detailed;

  upstream backend_upstream {
      # Cloud Map DNS 이름으로 자동 디스커버리
      # Nginx 서비스를 Service Discovery 없이 재생성하면
      # backend.internal.local은 백엔드 2개만 포함하게 됨
      zone backend_zone 64k;

      least_conn;
      server backend.internal.local:8080 max_fails=3 fail_timeout=30s resolve;

      # 연결 유지 설정
      keepalive 32;
      keepalive_timeout 60s;
  }

  server {
    listen 80;
    server_name 55td.duckdns.org;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type text/plain;
    }

    location / {
        return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    http2 on;
    server_name 55td.duckdns.org;

    # 클라이언트 설정
    ssl_certificate           /etc/letsencrypt/live/__LETSENCRYPT_DOMAIN__/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/__LETSENCRYPT_DOMAIN__/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/__LETSENCRYPT_DOMAIN__/chain.pem;
    ssl_stapling              on;
    ssl_stapling_verify       on;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    client_max_body_size 50m;
    client_body_timeout 60s;
    client_header_timeout 60s;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type text/plain;
    }

    # 1) WebSocket(/ws/*) 프록시
    location /ws/ {
        proxy_pass http://backend_upstream;

        # 프록시 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;

        # 업스트림 연결 유지 및 HTTP/1.1 사용
        proxy_http_version 1.1;

        # WebSocket 업그레이드 헤더 설정
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 타임아웃 설정 개선
        proxy_connect_timeout 10s;       # 백엔드 시작 시간 고려
        proxy_send_timeout 300s;         # 5분
        proxy_read_timeout 300s;         # 5분

        # 버퍼링 비활성화
        proxy_buffering off;
        proxy_request_buffering off;

        # 실패시 다음 백엔드로 재시도
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;

        # CSRF 토큰 헤더 전달
        proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
        proxy_set_header Cookie $http_cookie;

        # 디버깅 헤더
        add_header X-Upstream-Server $upstream_addr always;
        add_header X-Upstream-Status $upstream_status always;
    }

    # 2) SSE 프록시 설정
    location /api/sse {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE 관련 설정
        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;

        # 긴 타임아웃 (SSE)
        proxy_connect_timeout 10s;
        proxy_read_timeout 86400s;       # 24시간
        proxy_send_timeout 86400s;       # 24시간

        # 실패시 재시도
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;

        # CSRF 토큰 헤더 전달
        proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
        proxy_set_header Cookie $http_cookie;

        # 청크 인코딩 유지
        chunked_transfer_encoding on;

        # 디버깅 헤더
        add_header X-Upstream-Server $upstream_addr always;
        add_header X-Upstream-Status $upstream_status always;
        add_header Cache-Control 'no-cache' always;
    }

    # 3) REST API(/api/*) 프록시
    location /api/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # HTTP/1.1 및 연결 유지
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 타임아웃 설정
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 실패시 다음 서버로
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;

        # CSRF 토큰 헤더 전달
        proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
        proxy_set_header Cookie $http_cookie;

        # 디버깅 헤더
        add_header X-Upstream-Server $upstream_addr always;
        add_header X-Upstream-Status $upstream_status always;
    }

    # 4) OAuth2 로그인 프록시
    location /oauth2/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 실패시 재시도
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
    }

    location /login/oauth2/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 실패시 재시도
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
    }
        # 6) Swagger UI 프록시
    location /swagger-ui/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /v3/api-docs {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 실패시 재시도
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
    }
    # 5) 정적(프론트) — 나머지 전체
    root /usr/share/nginx/html;
    index index.html;
    
    # 6) Swagger UI 프록시
    location /swagger-ui/ {
        proxy_pass http://backend_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /v3/api-docs {
        proxy_pass http://backend_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # SPA 라우팅 고려: 없는 파일이면 index.html
    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}
