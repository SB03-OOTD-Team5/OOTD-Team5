plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'

}

group = 'com.sprint'
version = '0.0.1-SNAPSHOT'
description = 'OOTD-5Team'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // AWS SDK
    implementation 'software.amazon.awssdk:s3:2.31.7'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation("org.springframework.batch:spring-batch-test")

    //jwt nimbus
    // https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
    implementation 'com.nimbusds:nimbus-jose-jwt:10.5'

    //cache
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    //message broker
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.security:spring-security-messaging'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 웹 스크래핑
    implementation 'org.jsoup:jsoup:1.18.1'

}

tasks.named('test') {
    useJUnitPlatform()
    ignoreFailures = true  // 실패해도 다음 task 진행
    systemProperty "file.encoding", "UTF-8"
    finalizedBy jacocoTestReport
    String jnaPath = System.getenv("JNA_PATH")
    if (jnaPath) {
        println "JNA path set for tests: $jnaPath"
        jvmArgs += "-Djna.library.path=$jnaPath"
    }
}

// QueryDsl : 자동 생성 소스 파일 저장 위치
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// QueryDsl : 자동 생성 소스 파일 gradle clean으로 제거
clean {
    delete file(querydslDir);
}

//QueryDsl : 자바 컴파일할때, 자동 생성된 Q 클래스를 querydslSrcDir 경로에 생성
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}