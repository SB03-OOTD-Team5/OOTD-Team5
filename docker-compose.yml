services:
  reverse-proxy:
    image: nginx:1.27-alpine
    container_name: reverse-proxy
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - backend-net
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/main/resources/static:/usr/share/nginx/html:ro

  backend:
    build:
      context: .
    restart: unless-stopped
    environment:
      # --- AWS RDS PostgreSQL 설정 ---
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

      # --- ElasticCache Redis 설정 ---
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

      # --- Confluent Cloud Kafka 설정 ---
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: PLAIN
      SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="${CONFLUENT_KAFKA_API_KEY}"
        password="${CONFLUENT_KAFKA_API_SECRET}";

      # --- Kafka Producer / Consumer 설정 ---
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest

      # --- RabbitMQ 설정 ---
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_STOMP_PORT: ${RABBITMQ_STOMP_PORT}
      RABBITMQ_STOMP_LOGIN: ${RABBITMQ_STOMP_LOGIN}
      RABBITMQ_STOMP_PASSCODE: ${RABBITMQ_STOMP_PASSCODE}
      RABBITMQ_STOMP_VHOST: ${RABBITMQ_STOMP_VHOST}
      RABBITMQ_STOMP_HEARTBEAT_SEND: ${RABBITMQ_STOMP_HEARTBEAT_SEND}
      RABBITMQ_STOMP_HEARTBEAT_RECV: ${RABBITMQ_STOMP_HEARTBEAT_RECV}

    expose:
      - "8080"
    networks:
      - backend-net
    deploy:
      replicas: 2


networks:
  backend-net:
    driver: bridge
